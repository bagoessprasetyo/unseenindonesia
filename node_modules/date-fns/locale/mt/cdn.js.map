{"version":3,"file":"cdn.js","names":["_window$dateFns","__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","configurable","set","newValue","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","two","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","tokenValue","replace","String","addSuffix","comparison","buildFormatLongFn","args","arguments","length","undefined","width","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","date","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","value","context","valuesArray","formattingValues","defaultFormattingWidth","values","index","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","Number","localize","era","quarter","month","day","dayPeriod","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","prototype","hasOwnProperty","call","array","buildMatchPatternFn","parseResult","parsePattern","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","mt","code","weekStartsOn","firstWeekContainsDate","window","dateFns","_objectSpread","locale"],"sources":["cdn.js"],"sourcesContent":["(() => { var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {\n      get: all[name],\n      enumerable: true,\n      configurable: true,\n      set: (newValue) => all[name] = () => newValue\n    });\n};\n\n// lib/locale/mt/_lib/formatDistance.mjs\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"inqas minn sekonda\",\n    other: \"inqas minn {{count}} sekondi\"\n  },\n  xSeconds: {\n    one: \"sekonda\",\n    other: \"{{count}} sekondi\"\n  },\n  halfAMinute: \"nofs minuta\",\n  lessThanXMinutes: {\n    one: \"inqas minn minuta\",\n    other: \"inqas minn {{count}} minuti\"\n  },\n  xMinutes: {\n    one: \"minuta\",\n    other: \"{{count}} minuti\"\n  },\n  aboutXHours: {\n    one: \"madwar sieg\\u0127a\",\n    other: \"madwar {{count}} sieg\\u0127at\"\n  },\n  xHours: {\n    one: \"sieg\\u0127a\",\n    other: \"{{count}} sieg\\u0127at\"\n  },\n  xDays: {\n    one: \"\\u0121urnata\",\n    other: \"{{count}} \\u0121ranet\"\n  },\n  aboutXWeeks: {\n    one: \"madwar \\u0121img\\u0127a\",\n    other: \"madwar {{count}} \\u0121img\\u0127at\"\n  },\n  xWeeks: {\n    one: \"\\u0121img\\u0127a\",\n    other: \"{{count}} \\u0121img\\u0127at\"\n  },\n  aboutXMonths: {\n    one: \"madwar xahar\",\n    other: \"madwar {{count}} xhur\"\n  },\n  xMonths: {\n    one: \"xahar\",\n    other: \"{{count}} xhur\"\n  },\n  aboutXYears: {\n    one: \"madwar sena\",\n    two: \"madwar sentejn\",\n    other: \"madwar {{count}} snin\"\n  },\n  xYears: {\n    one: \"sena\",\n    two: \"sentejn\",\n    other: \"{{count}} snin\"\n  },\n  overXYears: {\n    one: \"aktar minn sena\",\n    two: \"aktar minn sentejn\",\n    other: \"aktar minn {{count}} snin\"\n  },\n  almostXYears: {\n    one: \"kwa\\u017Ci sena\",\n    two: \"kwa\\u017Ci sentejn\",\n    other: \"kwa\\u017Ci {{count}} snin\"\n  }\n};\nvar formatDistance = (token, count, options) => {\n  let result;\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2 && tokenValue.two) {\n    result = tokenValue.two;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"f'\" + result;\n    } else {\n      return result + \" ilu\";\n    }\n  }\n  return result;\n};\n\n// lib/locale/_lib/buildFormatLongFn.mjs\nfunction buildFormatLongFn(args) {\n  return (options = {}) => {\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n\n// lib/locale/mt/_lib/formatLong.mjs\nvar dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"dd/MM/yyyy\"\n};\nvar timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\"\n};\nvar dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\"\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\"\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\"\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\"\n  })\n};\n\n// lib/locale/mt/_lib/formatRelative.mjs\nvar formatRelativeLocale = {\n  lastWeek: \"eeee 'li g\\u0127adda' 'fil-'p\",\n  yesterday: \"'Il-biera\\u0127 fil-'p\",\n  today: \"'Illum fil-'p\",\n  tomorrow: \"'G\\u0127ada fil-'p\",\n  nextWeek: \"eeee 'fil-'p\",\n  other: \"P\"\n};\nvar formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];\n\n// lib/locale/_lib/buildLocalizeFn.mjs\nfunction buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n    return valuesArray[index];\n  };\n}\n\n// lib/locale/mt/_lib/localize.mjs\nvar eraValues = {\n  narrow: [\"Q\", \"W\"],\n  abbreviated: [\"QK\", \"WK\"],\n  wide: [\"qabel Kristu\", \"wara Kristu\"]\n};\nvar quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"1. kwart\", \"2. kwart\", \"3. kwart\", \"4. kwart\"]\n};\nvar monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"\\u0120\", \"L\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Fra\",\n    \"Mar\",\n    \"Apr\",\n    \"Mej\",\n    \"\\u0120un\",\n    \"Lul\",\n    \"Aww\",\n    \"Set\",\n    \"Ott\",\n    \"Nov\",\n    \"Di\\u010B\"\n  ],\n  wide: [\n    \"Jannar\",\n    \"Frar\",\n    \"Marzu\",\n    \"April\",\n    \"Mejju\",\n    \"\\u0120unju\",\n    \"Lulju\",\n    \"Awwissu\",\n    \"Settembru\",\n    \"Ottubru\",\n    \"Novembru\",\n    \"Di\\u010Bembru\"\n  ]\n};\nvar dayValues = {\n  narrow: [\"\\u0126\", \"T\", \"T\", \"E\", \"\\u0126\", \"\\u0120\", \"S\"],\n  short: [\"\\u0126a\", \"Tn\", \"Tl\", \"Er\", \"\\u0126a\", \"\\u0120i\", \"Si\"],\n  abbreviated: [\"\\u0126ad\", \"Tne\", \"Tli\", \"Erb\", \"\\u0126am\", \"\\u0120im\", \"Sib\"],\n  wide: [\n    \"Il-\\u0126add\",\n    \"It-Tnejn\",\n    \"It-Tlieta\",\n    \"L-Erbg\\u0127a\",\n    \"Il-\\u0126amis\",\n    \"Il-\\u0120img\\u0127a\",\n    \"Is-Sibt\"\n  ]\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"nofsillejl\",\n    noon: \"nofsinhar\",\n    morning: \"g\\u0127odwa\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\\u0127axija\",\n    night: \"lejl\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"nofsillejl\",\n    noon: \"nofsinhar\",\n    morning: \"g\\u0127odwa\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\\u0127axija\",\n    night: \"lejl\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"nofsillejl\",\n    noon: \"nofsinhar\",\n    morning: \"g\\u0127odwa\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\\u0127axija\",\n    night: \"lejl\"\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"f'nofsillejl\",\n    noon: \"f'nofsinhar\",\n    morning: \"filg\\u0127odu\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\\u0127axija\",\n    night: \"billejl\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"f'nofsillejl\",\n    noon: \"f'nofsinhar\",\n    morning: \"filg\\u0127odu\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\\u0127axija\",\n    night: \"billejl\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"f'nofsillejl\",\n    noon: \"f'nofsinhar\",\n    morning: \"filg\\u0127odu\",\n    afternoon: \"wara nofsinhar\",\n    evening: \"filg\\u0127axija\",\n    night: \"billejl\"\n  }\n};\nvar ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"\\xBA\";\n};\nvar localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};\n\n// lib/locale/_lib/buildMatchFn.mjs\nfunction buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n    const matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n    const parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    const key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString)) : findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n    let value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    const rest = string.slice(matchedString.length);\n    return { value, rest };\n  };\n}\nvar findKey = function(object, predicate) {\n  for (const key in object) {\n    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return;\n};\nvar findIndex = function(array, predicate) {\n  for (let key = 0;key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return;\n};\n\n// lib/locale/_lib/buildMatchPatternFn.mjs\nfunction buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult)\n      return null;\n    const matchedString = matchResult[0];\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult)\n      return null;\n    let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    const rest = string.slice(matchedString.length);\n    return { value, rest };\n  };\n}\n\n// lib/locale/mt/_lib/match.mjs\nvar matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(q|w)/i,\n  abbreviated: /^(q\\.?\\s?k\\.?|b\\.?\\s?c\\.?\\s?e\\.?|w\\.?\\s?k\\.?)/i,\n  wide: /^(qabel kristu|before common era|wara kristu|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^(q|b)/i, /^(w|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^k[1234]/i,\n  wide: /^[1234](\\.)? kwart/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmaglsond]/i,\n  abbreviated: /^(jan|fra|mar|apr|mej|ġun|lul|aww|set|ott|nov|diċ)/i,\n  wide: /^(jannar|frar|marzu|april|mejju|ġunju|lulju|awwissu|settembru|ottubru|novembru|diċembru)/i\n};\nvar parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^ġ/i,\n    /^l/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i\n  ],\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^mej/i,\n    /^ġ/i,\n    /^l/i,\n    /^aw/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i\n  ]\n};\nvar matchDayPatterns = {\n  narrow: /^[ħteġs]/i,\n  short: /^(ħa|tn|tl|er|ħa|ġi|si)/i,\n  abbreviated: /^(ħad|tne|tli|erb|ħam|ġim|sib)/i,\n  wide: /^(il-ħadd|it-tnejn|it-tlieta|l-erbgħa|il-ħamis|il-ġimgħa|is-sibt)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^ħ/i, /^t/i, /^t/i, /^e/i, /^ħ/i, /^ġ/i, /^s/i],\n  any: [\n    /^(il-)?ħad/i,\n    /^(it-)?tn/i,\n    /^(it-)?tl/i,\n    /^(l-)?er/i,\n    /^(il-)?ham/i,\n    /^(il-)?ġi/i,\n    /^(is-)?si/i\n  ]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i,\n  any: /^([ap]\\.?\\s?m\\.?|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^f'nofsillejl/i,\n    noon: /^f'nofsinhar/i,\n    morning: /għodwa/i,\n    afternoon: /wara(\\s.*)nofsinhar/i,\n    evening: /filgħaxija/i,\n    night: /lejl/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10)\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};\n\n// lib/locale/mt.mjs\nvar mt = {\n  code: \"mt\",\n  formatDistance,\n  formatLong,\n  formatRelative,\n  localize,\n  match,\n  options: {\n    weekStartsOn: 1,\n    firstWeekContainsDate: 4\n  }\n};\n\n// lib/locale/mt/cdn.js\nwindow.dateFns = {\n  ...window.dateFns,\n  locale: {\n    ...window.dateFns?.locale,\n    mt\n  }\n};\n\n//# debugId=6C05CCBFE40F558E64756e2164756e21\n })();"],"mappings":"8lDAAA,CAAC,UAAAA,eAAA,EAAM,CAAE,IAAIC,SAAS,GAAGC,MAAM,CAACC,cAAc;EAC9C,IAAIC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,MAAM,EAAEC,GAAG,EAAK;IAC9B,KAAK,IAAIC,IAAI,IAAID,GAAG;IAClBL,SAAS,CAACI,MAAM,EAAEE,IAAI,EAAE;MACtBC,GAAG,EAAEF,GAAG,CAACC,IAAI,CAAC;MACdE,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,GAAG,EAAE,SAAAA,IAACC,QAAQ,UAAKN,GAAG,CAACC,IAAI,CAAC,GAAG,oBAAMK,QAAQ;IAC/C,CAAC,CAAC;EACN,CAAC;;EAED;EACA,IAAIC,oBAAoB,GAAG;IACzBC,gBAAgB,EAAE;MAChBC,GAAG,EAAE,oBAAoB;MACzBC,KAAK,EAAE;IACT,CAAC;IACDC,QAAQ,EAAE;MACRF,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE;IACT,CAAC;IACDE,WAAW,EAAE,aAAa;IAC1BC,gBAAgB,EAAE;MAChBJ,GAAG,EAAE,mBAAmB;MACxBC,KAAK,EAAE;IACT,CAAC;IACDI,QAAQ,EAAE;MACRL,GAAG,EAAE,QAAQ;MACbC,KAAK,EAAE;IACT,CAAC;IACDK,WAAW,EAAE;MACXN,GAAG,EAAE,oBAAoB;MACzBC,KAAK,EAAE;IACT,CAAC;IACDM,MAAM,EAAE;MACNP,GAAG,EAAE,aAAa;MAClBC,KAAK,EAAE;IACT,CAAC;IACDO,KAAK,EAAE;MACLR,GAAG,EAAE,cAAc;MACnBC,KAAK,EAAE;IACT,CAAC;IACDQ,WAAW,EAAE;MACXT,GAAG,EAAE,yBAAyB;MAC9BC,KAAK,EAAE;IACT,CAAC;IACDS,MAAM,EAAE;MACNV,GAAG,EAAE,kBAAkB;MACvBC,KAAK,EAAE;IACT,CAAC;IACDU,YAAY,EAAE;MACZX,GAAG,EAAE,cAAc;MACnBC,KAAK,EAAE;IACT,CAAC;IACDW,OAAO,EAAE;MACPZ,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE;IACT,CAAC;IACDY,WAAW,EAAE;MACXb,GAAG,EAAE,aAAa;MAClBc,GAAG,EAAE,gBAAgB;MACrBb,KAAK,EAAE;IACT,CAAC;IACDc,MAAM,EAAE;MACNf,GAAG,EAAE,MAAM;MACXc,GAAG,EAAE,SAAS;MACdb,KAAK,EAAE;IACT,CAAC;IACDe,UAAU,EAAE;MACVhB,GAAG,EAAE,iBAAiB;MACtBc,GAAG,EAAE,oBAAoB;MACzBb,KAAK,EAAE;IACT,CAAC;IACDgB,YAAY,EAAE;MACZjB,GAAG,EAAE,iBAAiB;MACtBc,GAAG,EAAE,oBAAoB;MACzBb,KAAK,EAAE;IACT;EACF,CAAC;EACD,IAAIiB,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAK;IAC9C,IAAIC,MAAM;IACV,IAAMC,UAAU,GAAGzB,oBAAoB,CAACqB,KAAK,CAAC;IAC9C,IAAI,OAAOI,UAAU,KAAK,QAAQ,EAAE;MAClCD,MAAM,GAAGC,UAAU;IACrB,CAAC,MAAM,IAAIH,KAAK,KAAK,CAAC,EAAE;MACtB